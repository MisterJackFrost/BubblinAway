<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>input[0] = vk_up
input[1] = vk_down
input[2] = vk_left
input[3] = vk_right
input[4] = ord("Z")
input[5] = ord("X")
button[0] = irandom(5)
button[1] = irandom(5)
button[2] = irandom(5)
button[3] = irandom(5)
current_prompt = 0
score_toAdd = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(input[0]) xor keyboard_check_pressed(input[1]) xor keyboard_check_pressed(input[2]) xor keyboard_check_pressed(input[3]) xor keyboard_check_pressed(input[4]) xor keyboard_check_pressed(input[5]) {
  if keyboard_check_pressed(input[button[current_prompt]]) {
    current_prompt ++
    if current_prompt &gt; 3 {
    current_prompt = 0
    button[0] = irandom(5)
    button[1] = irandom(5)
    button[2] = irandom(5)
    button[3] = irandom(5)
      with (obj_bubble) 
       { 
        target_size += (60 * global.delta_factor)
        obj_score_display.score_val += 100
        }
        score_toAdd += 100
image_angle += (1 * global.delta_factor)
obj_default_char.image_index = 2
offset_x = 2.75;
      }
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_input_prompts,button[0],x,y - 32,0.5,0.5,0,c_white,1)
draw_sprite_ext(spr_input_prompts,button[1],x + 128,y - 32,0.5,0.5,0,c_white,1)
draw_sprite_ext(spr_input_prompts,button[2],x + 256,y - 32,0.5,0.5,0,c_white,1)
draw_sprite_ext(spr_input_prompts,button[3],x + 384,y - 32,0.5,0.5,0,c_white,1)

for (var i = 0; i &lt; current_prompt; i++) {
    draw_sprite_ext(spr_input_success ,0 ,x + (i*128),y - 48,0.5,0.5,0,c_white,1)
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
